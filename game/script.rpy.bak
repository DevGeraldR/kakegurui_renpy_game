define cassandra = Character("Cassandra", who_color="#c8ffc8")

image bg intro = "the casino background.jpg"

image player_picked_card = "[player_card]_idle.png"
image opponent_picked_card = "[opponent_card]_idle.png"

# For main character

image cassandra:
    "images/cassandra/cassandra_1.png"
    pause 0.5
    "images/cassandra/cassandra_2.png"
    pause 0.1
    "images/cassandra/cassandra_1.png"

# For opponet video when choosing attack 

image pride_turn = Movie(play = "images/pride/pride.webm", loop = False)
image envy_turn = Movie(play = "images/envy/envy.webm", loop = False)
image gluttony_turn = Movie(play = "images/gluttony/gluttony.webm", loop = False)
image greed_turn = Movie(play = "images/greed/greed.webm", loop = False)
image lust_turn = Movie(play = "images/lust/lust.webm", loop = False)
image sloth_turn = Movie(play = "images/sloth/sloth.webm", loop = False)
image anger_turn = Movie(play = "images/anger/anger.webm", loop = False)

# The game starts here.

label start:

    scene bg intro

    # For initialization

    call variables from _call_variables

    # To display current money of the player

    show screen show_money

    menu start_menu:
        "Start":
            jump gameplay
        "Reset Level":
            $ level = 1
            call show_text("Level Reseted") from _call_show_text
            jump start_menu
        "Reset Game":
            $ level = 1
            $ money = 10000
            call show_text("Game Reseted") from _call_show_text_1
            jump start_menu

    return

# Initialize variables

label variables:
    $ player_cards_drawn = ["cards1", "cards2", "cards3"]
    $ player_card = " "
    $ opponent_card = " "
    $ level = 1
    $ winner = " "
    $ money = 10000
    $ bet = 0
    $ opponent_name = " "
    $ player_score = 0
    $ opponent_score = 0
    $ round_number = 1
    return

# Manage game and level

label gameplay:

    hide player_picked_card
    hide opponent_picked_card 
    
    $ text = level
    $ player_card = " "
    $ opponent_card = " " 
    $ player_score = 0
    $ opponent_score = 0
    $ round_number = 1

    if level == 1:
        jump level_1
    elif level == 2:
        jump level_2
    elif level == 3:
        jump level_3
    elif level == 4:
        jump level_4
    elif level == 5:
        jump level_5
    elif level == 6:
        jump level_6
    elif level == 7:
        jump level_7

# To display the bet in each game and subtruct the bet to the current money of player

label bet_menu:
    menu:
        "Bet [bet]":
            if money-bet >= 0:
                play sound "audio/chips_bet.ogg"
                $ money -= bet
                return
            else:
                call show_text("You don't have enough balance") from _call_show_text_2
                jump bet_menu
        "Quit":
            # To hide scores
            hide screen show_scores
            jump start_menu

# Handle levels

label level_1:

    show cassandra    

    cassandra """

    Hi welcome to The Cardinal Sins: A card game

    These are the rules of the game

    The game will be different from the traditional rock, paper, scissors game. The players will be dealt with three random cards it will be either rock, paper, or scissors.

    The player will start with 10,000 chips at the begging of the game.
    
    The game will progress through seven story chapters representing the seven deadly sins.

    Higher level means higher betting chips.

    If there is a tie, the player will play the cards until someone wins or the game ends.

    Are you ready to play with The Cardinal Sins?
    
    """
    
    hide cassandra

    window hide

    call show_text("Level 1") from _call_show_text_3

    show cassandra

    cassandra "Are you ready to play with Pride?"

    hide cassandra
    

    $ bet = 1000
    
    # For displaying opponent images

    $ opponent_name = "pride"

    # To start the round

    jump play_round
    
label level_2:

    call show_text("Level 2") from _call_show_text_4

    show cassandra

    cassandra "Are you ready to play with Envy?"

    hide cassandra

    $ bet = 2000 

    $ opponent_name = "envy"

    jump play_round

label level_3:
    call show_text("Level 3") from _call_show_text_5

    show cassandra

    cassandra "Are you ready to play with Gluttony?"

    hide cassandra

    $ bet = 3000 

    $ opponent_name = "gluttony"
    jump play_round

label level_4:
    call show_text("Level 4") from _call_show_text_6

    show cassandra

    cassandra "Are you ready to play with Lust?"

    hide cassandra

    $ bet = 4000 

    $ opponent_name = "lust"
    jump play_round

label level_5:
    call show_text("Level 5") from _call_show_text_7

    show cassandra

    cassandra "Are you ready to play with Anger?"

    hide cassandra

    $ bet = 5000 

    $ opponent_name = "anger"
    jump play_round

label level_6:
    call show_text("Level 6") from _call_show_text_8

    show cassandra

    cassandra "Are you ready to play with Greed?"

    hide cassandra

    $ bet = 6000

    $ opponent_name = "greed"
    jump play_round

label level_7:
    call show_text("Level 7") from _call_show_text_9

    show cassandra

    cassandra "Are you ready to play with Sloth?"

    hide cassandra

    $ bet = 7000

    $ opponent_name = "sloth"
    jump play_round

# To play each round
    
label play_round:

    show screen show_scores

    while round_number <= 3:

        call show_round(round_number)

        call bet_menu from _call_bet_menu

        call player_card_randomizer from _call_player_card_randomizer

        # players turn

        show cassandra
        call show_text("Your turn") from _call_show_text_10
        $ player_card = renpy.call_screen("choose_cards")

        # Opponent turn

        hide cassandra
        call show_opponent
        call show_text("Opponents turn") from _call_show_text_11

        # To generate random number

        call card_picker from _call_card_picker

        # To transform each number into a card
        
        if card_picked == 1:
            $ opponent_card = "rock"
        elif card_picked == 2:
            $ opponent_card = "paper"
        else:
            $ opponent_card = "scissors"

        play sound "audio/jack_en_poy.ogg"
        call show_text("Result")

        # For deciding winner

        if player_card == opponent_card:
            $ winner = "tie"
        elif player_card == "rock":
            if opponent_card == "scissors":
                $ winner = "player"
            else:
                $ winner = "opponent"
        elif player_card == "paper":
            if opponent_card == "rock":
                $ winner = "player"
            else:
                $ winner = "opponent"
        elif player_card == "scissors":
            if opponent_card == "paper":
                $ winner = "player"
            else:
                $ winner = "opponent"

        # For displaying players card
        
        call show_choosen_card from _call_show_choosen_card
        
        # To handle winner       

        if winner == "player":
            play sound "audio/win.ogg"
            call show_text("You win") 
            $ player_score += 1
            $ round_number += 1
            $ bet += bet
        
        elif winner == "opponent":
            play sound "audio/lost.ogg"
            call show_text("You lose") 
            $ opponent_score += 1
            $ round_number += 1
            $ bet += bet
        else:
            call show_text("Tie") 
            $ money += bet

    # To hide scores

    hide screen show_scores

    if player_score > opponent_score:
        call show_text("You win the game") from _call_show_text_12
        $ level += 1
        $ money += bet

        # To handle end level winner
        # Reset game and money to start at the beggining

        if level > 7:
            call show_text("Congratiolations! You bet the game") from _call_show_text_13
            $ level = 1
            $ money = 2000
            jump start_menu

        menu:
            "Continue to level [level]":
                jump gameplay
            "Main Menu":
                jump start_menu
    else:
        call show_text("You lose the game") from _call_show_text_14
        menu:
            "Play Again":
                jump gameplay
            "Main menu":
                $ level = 1
                jump start_menu

# To display oppent when their turn

label show_opponent:
    if opponent_name == "pride":
        show pride_turn
    elif opponent_name == "envy":
        show envy_turn
    elif opponent_name == "gluttony":
        show gluttony_turn 
    elif opponent_name == "greed":
        show greed_turn
    elif opponent_name == "lust":
        show lust_turn
    elif opponent_name == "sloth":
        show sloth_turn
    elif opponent_name == "anger":
        show anger_turn
    pause 1.5
    return

# To show choosen card of the player and the opponent

label show_choosen_card:

    # Shows picked card of the player

    show player_picked_card with dissolve:
        xalign 0.3
        yalign 0.5

    # Shows picked card of the player

    show opponent_picked_card with dissolve:
        xalign 0.7
        yalign 0.5

    # To puase the game for 1 sec. while shoowing off the card

    pause 1

    # To hide cards

    hide player_picked_card
    hide opponent_picked_card 

    return

# To rounds text

label show_round(round):
    show text "Round [round]" at truecenter with dissolve
    pause 1
    hide text with dissolve
    return
    
# To display text

label show_text(text):
    show text "[text]" at truecenter with dissolve
    pause 1
    hide text with dissolve
    return

# To generate random number for random card selection

label card_picker:
    $ card_picked = renpy.random.randint(1, 4)
    return

# Picked 3 random cards for the player option attack

label player_card_randomizer:
    $ card_amount = 3
    $ counter = 0

    # To loop 3 times and convert each random number to valid card
    # Each coverted valid card is stored in the player cards

    while counter < card_amount:
        call card_picker from _call_card_picker_1
        if card_picked == 1:
            $ player_cards_drawn[counter] = "rock"
        elif card_picked == 2:
            $ player_cards_drawn[counter] = "paper"
        else:
            $ player_cards_drawn[counter] = "scissors"
        $ counter += 1

    return

# To display the cards for player option

screen choose_cards:
    
    vbox:
        xalign 0.5
        yalign 0.9
        text "Choose card" at center
        hbox: 
            imagebutton:
                idle "[player_cards_drawn[0]]_idle.png"
                action Return(player_cards_drawn[0])
            imagebutton:
                idle "[player_cards_drawn[1]]_idle.png"
                action Return(player_cards_drawn[1])
            imagebutton:
                idle "[player_cards_drawn[2]]_idle.png"
                action Return(player_cards_drawn[2])

# To display the current money of the player

screen show_money:
    text "Chips: [money]":
        xalign 0.5
        yalign 0.1

screen show_scores:
    text "Player Score: [player_score]":
        xalign 0.1
        yalign 0.1
    text "Opponent Score: [opponent_score]":
        xalign 0.9
        yalign 0.1